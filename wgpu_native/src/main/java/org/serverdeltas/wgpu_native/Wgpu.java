package org.serverdeltas.wgpu_native;

import jnr.ffi.LibraryLoader;
import jnr.ffi.Pointer;
import jnr.ffi.Runtime;

import java.io.File;
import java.nio.ByteBuffer;

public class Wgpu {

    /**
     * The function bindings generated by jnr-ffi
     */
    public static WgpuNative.WgpuNativeJNI wgpuNative;
    private static Runtime runtime;

    /**
     * Loads the given file and creates the bindings in {@link WgpuNative.WgpuNativeJNI}. It will then setup the log with the
     * default log callback, and a log level of WARN.
     */
    public static void init(File nativeFile) {
        var loader = LibraryLoader.create(WgpuNative.WgpuNativeJNI.class);

        wgpuNative = loader.load(nativeFile.getAbsolutePath());
        runtime = Runtime.getRuntime(wgpuNative);
    }

    /**
     * Wraps a series of long values in a pointer in direct memory.
     */
    public static Pointer createLongArrayPointer(long[] longs){
        Pointer ptr = Wgpu.createDirectPointer(longs.length * Long.BYTES);

        for(int i = 0; i < longs.length; i++){
            ptr.putLongLong((long) i * Long.BYTES, longs[i]);
        }

        return ptr;
    }

    public static Pointer createEnumArrayPointer(Enum<?>[] enums){
        Pointer ptr = Wgpu.createDirectPointer(enums.length * Long.BYTES);

        for(int i = 0; i < enums.length; i++){
            ptr.putInt((long) i * Integer.BYTES, enums[i].ordinal());
        }

        return ptr;
    }

    /**
     * Copies the given data into a DirectByteBuffer and
     * then returns the buffer's pointer
     *
     * @see ByteBuffer#allocateDirect(int)
     */
    public static Pointer createByteArrayPointer(byte[] bytes){
        var dataBuffer = ByteBuffer.allocateDirect(bytes.length).put(bytes);
        dataBuffer.rewind();

        return Wgpu.createByteBufferPointer(dataBuffer);
    }

    /**
     * returns a null pointer
     */
    public static Pointer createNullPointer(){
        return Pointer.wrap(runtime, 0x00);
    }

    /**
     * returns the pointer to the provided byte buffer.
     *
     * @throws IllegalArgumentException if buffer isn't using direct memory, or buffer.position != 0
     */
    public static Pointer createByteBufferPointer(ByteBuffer buffer) {
        if(!buffer.isDirect()){
            throw new IllegalArgumentException("Buffer must be direct!");
        }

        if(buffer.position() > 0){
            throw new IllegalArgumentException("Buffer should have a position of zero!");
        }

        return Pointer.wrap(runtime, buffer);
    }

    /**
     * a pointer in direct memory with the given size
     *
     * @param size (in bytes) space allocated for the pointer
     */
    public static Pointer createDirectPointer(int size) {
        return runtime.getMemoryManager().allocateDirect(size);
    }

    /**
     * Used for unit testing only!
     */
    static void setRuntime(Runtime runtime) {
        Wgpu.runtime = runtime;
    }

    public static Runtime getRuntime() {
        return runtime;
    }
}
